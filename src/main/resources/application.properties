# Application Name
spring.application.name=PokeAPI


# Server Configuration
# Only change the port if necessary! ( Because I made the info at the start about what the port is static :/ )
server.port=8081


# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB


# SSL Configuration
# - Generate a new keystore this is just an example ( keytool -genkeypair -alias pokeapi -keyalg RSA -keysize 2048 -storetype JKS -keystore keystore.jks -validity 365 )
server.ssl.key-store=classpath:keystore.jks
server.ssl.key-store-password=2025KeyPokeAP!
server.ssl.key-store-type=JKS
server.ssl.key-alias=pokeapi


# Database Configuration
# - Make sure you make a database in under the main schema and a user with access to it!
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/pokeapi
spring.datasource.username=pokeapi2
spring.datasource.password=pokeapi2
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.ddl-auto=update


# Logging Configuration
logging.level.root=INFO
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql=ERROR
logging.level.org.hibernate=ERROR


# Security Configuration
# - this it an example user and password, please change it to something more secure
spring.security.user.name=henriette
spring.security.user.password=q(fz}WVy~{TR7J4dZI,DKFNh*E#T]SeXVjLQ?OC|a.A[=!xpCwPBGtQAi9USH+_vXgBoH8E5Jc@YNRkZU1n&rGmOb%sMuYKP0MWF3I)-l2;DL6^Wa+YSFbXLEw0U;2WV=dB!KJDPKFX*1l&V8N@6_z7(m)4OkrCn[GG-#ST|R{ZJ^j}U%vAfT.MoYIP?~gLycRHBQZu]DtHiqMICxpE,93AhNsQO5e


